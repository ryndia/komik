import java.io.BufferedWriter;
import java.io.FileWriter;
import java.time.LocalDate;
import java.util.Properties;

import javax.swing.table.DefaultTableModel;

import org.jdatepicker.impl.JDatePanelImpl;
import org.jdatepicker.impl.JDatePickerImpl;
import org.jdatepicker.impl.UtilDateModel;

public class studentAdmin extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public studentAdmin() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jTextField2 = new javax.swing.JTextField();
        jComboBox2 = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        button1 = new java.awt.Button();
        button2 = new java.awt.Button();
        button3 = new java.awt.Button();
        button4 = new java.awt.Button();
        
        flagSearch = false;
        
        model = new UtilDateModel();
        Properties propierties = new Properties();
        propierties.put("text.today", "Today");
        propierties.put("text.month", "Month");
        propierties.put("text.year", "Year");
        datePanel = new JDatePanelImpl(model, propierties);
        datePicker = new JDatePickerImpl(datePanel, new DateLabelFormatter());

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Teacher Panel");

        jLabel1.setText("Admin ID");
        jLabel1.setToolTipText("Admin ID");
        jLabel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel1.setVisible(false);

        jLabel2.setText("Admin Panel");
        jLabel2.setToolTipText("Admin Name");
        jLabel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTextField1.setText("Student Name");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Faculty Of Science", "Faculty Of Engineering", "Faculty of Law and Management", "Faculty of Communication and Digital Technologies", "Faculty Of Social Scienes and Humanities", "Faculty of Agriculture", "Faculty of Medecine and Health Sciences", "Centre for Innovative & Lifelong Learning" }));

        jTextField2.setText("Module");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Year 1", "Year 2", "Year 3", "Year 4" }));

        jButton2.setText("Search");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(datePicker, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(datePicker)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
        new Object[][] {/*
        	{null,null,null,null,null,null,null},
        	{null,null,null,null,null,null,null},
        	{null,null,null,null,null,null,null},
        	{null,null,null,null,null,null,null}*/
        },	
            new String [] {
                "Date", "Student Name", "Faculty","Module", "Course", "Year", "Presence"
            }
        ) {
            private static final long serialVersionUID = 1L;
			Class[] types = new Class [] {
            	java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setToolTipText("Student Information");
        jTable1.setShowGrid(true);
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(150);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(200);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(200);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(200);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(120);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(120);
            jTable1.getColumnModel().getColumn(6).setPreferredWidth(120);

        }

        button1.setLabel("Export");
        button1.setBackground(java.awt.Color.white);

        button1.setPreferredSize(new java.awt.Dimension(60, 24));
        button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button1ActionPerformed(evt);
            }
        });
        

        button2.setLabel("Back");
        button2.setBackground(java.awt.Color.white);
        button2.setPreferredSize(new java.awt.Dimension(60, 24));
        button2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button2ActionPerformed(evt);
            }
        });

        button3.setLabel("save");
        button3.setMinimumSize(new java.awt.Dimension(42, 24));
        button3.setPreferredSize(new java.awt.Dimension(60, 24));
        button3.setVisible(false);

        button4.setLabel("Add Student");
        button4.setBackground(java.awt.Color.white);
        button4.setPreferredSize(new java.awt.Dimension(60, 24));
        button4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        getContentPane().setBackground(java.awt.Color.blue);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(button2, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(30, 30, 30)
                            .addComponent(button3, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(28, 28, 28)
                            .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(28, 28, 28)
                            .addComponent(button4, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 570, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        setValues();
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {
		flagSearch = true;
		setValues();
    }
    private void button2ActionPerformed(java.awt.event.ActionEvent evt)
    {
    	admin s = new admin();
    	s.setVisible(true);
    	this.dispose();
    }
    
    private void button4ActionPerformed(java.awt.event.ActionEvent evt)
    {
    	addStudent as = new addStudent();
    	as.setVisible(true);
    	this.dispose();
    }
    
    private void button1ActionPerformed(java.awt.event.ActionEvent evt)
    {
    	try {
    			FileWriter fw = new FileWriter("outData.xls");
    			BufferedWriter bw = new BufferedWriter(fw);
	    	for(student s: startApp.s)
	    	{
	    		for(int i = 0; i<s.getAttendance().size();i++)
	    		{
	                //"Date", "Student Name", "Faculty","Module", "Course", "Year", "Presence"
	    			Attendance a = s.getAttendance().get(i);
	    			String d = a.getDate().toString();
	    			String module = a.getModule();
	    			Boolean presence = a.getPresence();
	    			String p;
	    			if(presence)
	    			{
	    				p = "Presence";
	    			}
	    			else {
	    				p = "Absent";
	    			}
    				String writefile = d+","+
    								s.getName()+","+
    								s.getCourse()+","+
    								s.getFaculty()+","+
    								"Year "+Integer.toString(s.getYear())+","+
    								module+","+
    								p+"\n";
    				bw.write(writefile);
	    			}
	    		}
		    	bw.close();
				fw.close();
	    	}
    		catch(Exception e)
    		{
    			System.err.print(e);
    		}
    		
    }
    
    private void setValues()
    {
    	LocalDate datePick = null;
    	Boolean dateFlag = true;
    	DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
		int j = model.getRowCount();
		if(flagSearch && j > 0)
		{
			for(int k = 0; k <j;k++)
			{
				model.removeRow(k);
				jTable1.revalidate();
			}
		}
		if(model.getRowCount()> 0)
		{
			model.removeRow(model.getRowCount()-1);
		}
		datePick = (LocalDate) datePicker.getModel().getValue();
    	for(student s: startApp.s)
    	{

    		for(int i = 0; i<s.getAttendance().size();i++)
    		{
                //"Date", "Student Name", "Faculty","Module", "Course", "Year", "Presence"

    			Attendance a = s.getAttendance().get(i);
    			String d = a.getDate().toString();
    			String module = a.getModule();
    			Boolean presence = a.getPresence();
    			Boolean nameflag = true;
    			Boolean modflag = true;
    			Boolean facflag = true;
    			Boolean yflag = true;
    			
    			if( datePick != null&&datePick.compareTo(a.getDate())!=0) {
    				dateFlag = false;
    			}
    			if(flagSearch)
    			{
        			if((jComboBox1.getSelectedItem().toString()).compareTo(s.getFaculty())!=0)
        			{
        				facflag = false;
        				
        			}
        			String year = jComboBox2.getSelectedItem().toString();
        			int y = 0;
        			if(year.compareTo("Year 1") == 0)
        			{
        				y = 1;
        			}
        			else if(year.compareTo("Year 2") == 0)
        			{
        				y = 2;
        			}
        			else if(year.compareTo("Year 3") == 0)
        			{
        				y = 3;
        			}
        			else
        			{
        				y = 4;
        			}
        			if(y != s.getYear())
        			{ 
        				yflag = false;
        			}
        			flagSearch = false;
    			}

    			
    			if(jTextField1.getText().compareTo("Student Name")!=0)
    			{
    				if(s.getName().compareTo(jTextField1.getText())!=0)
    				{
    					nameflag = false;
    				}
    			}
    			
    			if(jTextField2.getText().compareTo("Module")!=0)
    			{
    				if(module.compareTo(jTextField2.getText())!=0)
    				{
    					modflag = false;
    				}
    			}
    			
    			
    			
    			/*
    			jTable1.getModel().setValueAt(d, j+i, 0);
    			jTable1.getModel().setValueAt(s.getName(), j+i, 1);
    			jTable1.getModel().setValueAt(s.getFaculty(), j+i, 2);
    			jTable1.getModel().setValueAt(module, j+i, 3);
    			jTable1.getModel().setValueAt(s.getCourse(), j+i, 4);
    			jTable1.getModel().setValueAt(s.getYear(), j+i, 5);
    			jTable1.getModel().setValueAt(presence, j+i, 6);*/
    			
    			if(modflag == true && nameflag == true && dateFlag == true && yflag == true && facflag == true)
    			{
    				model.addRow(new Object[]{d, s.getName(),s.getFaculty(),module,s.getCourse(),s.getYear(),presence});
    			}
    		}
    	}
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button button1;
    private java.awt.Button button2;
    private java.awt.Button button3;
    private java.awt.Button button4;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private Boolean flagSearch;
    private JDatePanelImpl datePanel;
    private JDatePickerImpl datePicker;
    private UtilDateModel model;
    // End of variables declaration//GEN-END:variables
}